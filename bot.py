import os
import requests
from telethon import TelegramClient, events

# –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
API_ID = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API_ID: ")
API_HASH = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API_HASH: ")
OWNER_ID = int(input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram ID: "))

SESSION_NAME = "shizuku"
bot_token = None

# –ü–∞–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –º–æ–¥—É–ª–µ–π
MODULES_DIR = "./modules"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
client = TelegramClient(SESSION_NAME, API_ID, API_HASH)

# ID –≥—Ä—É–ø–ø—ã –¥–ª—è –ª–æ–≥–æ–≤
logs_group_id = None

async def create_logs_group():
    global logs_group_id
    # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≥—Ä—É–ø–ø—É "Shizuku Logs"
    dialogs = await client.get_dialogs()
    for dialog in dialogs:
        if dialog.name == "Shizuku Logs":
            logs_group_id = dialog.id
            return

    # –ï—Å–ª–∏ –≥—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞—ë–º –µ—ë
    try:
        new_group = await client(CreateChatRequest(users=[OWNER_ID], title="Shizuku Logs"))
        logs_group_id = new_group.chats[0].id
        print("–ì—Ä—É–ø–ø–∞ 'Shizuku Logs' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥—Ä—É–ø–ø—ã: {e}")

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python —Ñ–∞–π–ª–∞ ---
@client.on(events.NewMessage(pattern=r"/—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å (.+)"))
async def install_module(event):
    url = event.pattern_match.group(1).strip()
    if event.sender_id == OWNER_ID:
        try:
            # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –º–æ–¥—É–ª–µ–π, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            if not os.path.exists(MODULES_DIR):
                os.makedirs(MODULES_DIR)
                
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
            response = requests.get(url)
            if response.status_code == 200:
                file_name = url.split("/")[-1]
                file_path = os.path.join(MODULES_DIR, file_name)
                with open(file_path, 'wb') as f:
                    f.write(response.content)
                await event.edit(f"‚úÖ –ú–æ–¥—É–ª—å '{file_name}' —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
                await client.send_message(logs_group_id, f"‚úÖ –ú–æ–¥—É–ª—å '{file_name}' –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
            else:
                await event.edit(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –º–æ–¥—É–ª—è —Å URL: {url}")
                await client.send_message(logs_group_id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –º–æ–¥—É–ª—è —Å URL: {url}")
        except Exception as e:
            await event.edit(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –º–æ–¥—É–ª—è: {e}")
            await client.send_message(logs_group_id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –º–æ–¥—É–ª—è: {str(e)}")
    else:
        await event.edit("‚ùå [–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞]")

# --- –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ (–ø–æ–º–æ—â—å) ---
@client.on(events.NewMessage(pattern=r"/–ø–æ–º–æ—â—å"))
async def help_command(event):
    if event.sender_id == OWNER_ID:
        help_text = """
        –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
        
        /—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å [URL] - –°–∫–∞—á–∏–≤–∞–µ—Ç Python —Ñ–∞–π–ª –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É URL –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ –ø–∞–ø–∫—É –º–æ–¥—É–ª–µ–π.
        /–ø–æ–º–æ—â—å - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.
        /-—É–¥–∞–ª–∏—Ç—å [–∏–º—è —Ñ–∞–π–ª–∞] - –£–¥–∞–ª–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å (—Ñ–∞–π–ª).
        """
        await event.edit(help_text)
        await client.send_message(logs_group_id, "üìú –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–º–æ—â—å.")
    else:
        await event.edit("‚ùå [–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞]")

# --- –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è ---
@client.on(events.NewMessage(pattern=r"/-—É–¥–∞–ª–∏—Ç—å (.+)"))
async def remove_module(event):
    module_name = event.pattern_match.group(1).strip()
    if event.sender_id == OWNER_ID:
        try:
            module_path = os.path.join(MODULES_DIR, module_name)
            if os.path.exists(module_path):
                os.remove(module_path)
                await event.edit(f"‚úÖ –ú–æ–¥—É–ª—å '{module_name}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.")
                await client.send_message(logs_group_id, f"‚úÖ –ú–æ–¥—É–ª—å '{module_name}' –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.")
            else:
                await event.edit(f"‚ùå –ú–æ–¥—É–ª—å '{module_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                await client.send_message(logs_group_id, f"‚ö†Ô∏è –ú–æ–¥—É–ª—å '{module_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
        except Exception as e:
            await event.edit(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–æ–¥—É–ª—è: {e}")
            await client.send_message(logs_group_id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–æ–¥—É–ª—è '{module_name}': {str(e)}")
    else:
        await event.edit("‚ùå [–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞]")

# --- –ó–∞–ø—É—Å–∫ ---
print("Shizuku –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π...")
await create_logs_group()  # –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ

client.start()
client.run_until_disconnected()
